{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bozdo\\\\React-Case-Study\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport Grid from './grid';\nimport dataList from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [today, setToday] = useState(new Date());\n  const [limit, setLimit] = useState(5);\n  const [result, setResult] = useState(0);\n  const [miscoloredRows, setMiscoloredRows] = useState([]);\n  function control(today, limit) {\n    const rows = document.querySelectorAll('tbody tr');\n    let miscoloredRows = 0;\n    const miscoloredNames = [];\n    rows.forEach((row, index) => {\n      var _cells$, _cells$$textContent, _cells$2, _cells$2$textContent, _cells$3, _cells$3$textContent, _cells$4, _cells$4$textContent, _cells$5, _cells$5$textContent;\n      const cells = row.querySelectorAll('td');\n      const mailReceivedDate = new Date(((_cells$ = cells[1]) === null || _cells$ === void 0 ? void 0 : (_cells$$textContent = _cells$.textContent) === null || _cells$$textContent === void 0 ? void 0 : _cells$$textContent.trim()) || '');\n      const solutionSentDate = (_cells$2 = cells[2]) !== null && _cells$2 !== void 0 && (_cells$2$textContent = _cells$2.textContent) !== null && _cells$2$textContent !== void 0 && _cells$2$textContent.trim() && ((_cells$3 = cells[2]) === null || _cells$3 === void 0 ? void 0 : (_cells$3$textContent = _cells$3.textContent) === null || _cells$3$textContent === void 0 ? void 0 : _cells$3$textContent.trim()) !== '-' ? new Date((_cells$4 = cells[2]) === null || _cells$4 === void 0 ? void 0 : (_cells$4$textContent = _cells$4.textContent) === null || _cells$4$textContent === void 0 ? void 0 : _cells$4$textContent.trim()) : today;\n      if (isNaN(mailReceivedDate.getTime()) || isNaN(solutionSentDate.getTime())) {\n        return;\n      }\n      const dayDifference = Math.ceil(Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24));\n      const computedStyle = window.getComputedStyle(row);\n      const isBackgroundRed = computedStyle.backgroundColor === 'rgb(255, 0, 0)';\n      const rowName = (_cells$5 = cells[0]) === null || _cells$5 === void 0 ? void 0 : (_cells$5$textContent = _cells$5.textContent) === null || _cells$5$textContent === void 0 ? void 0 : _cells$5$textContent.trim();\n      if (isBackgroundRed && dayDifference <= limit || !isBackgroundRed && dayDifference > limit) {\n        miscoloredRows++;\n        if (rowName) miscoloredNames.push(rowName);\n      }\n    });\n    return {\n      count: miscoloredRows,\n      miscoloredNames\n    };\n  }\n  const handleCheck = () => {\n    const {\n      count,\n      miscoloredNames\n    } = control(today, limit);\n    setResult(count);\n    setMiscoloredRows(miscoloredNames);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dgpays Case Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      source: dataList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '10px'\n        },\n        children: [\"Today :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setToday(new Date(e.target.value)),\n          value: today.toISOString().split('T')[0],\n          style: {\n            marginLeft: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '40px'\n        },\n        children: [\"Limit :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setLimit(parseInt(e.target.value)),\n          value: limit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheck,\n        children: \"Check Miscolored Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Miscolored Rows Count: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), miscoloredRows.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontWeight: 'normal',\n          display: 'inline',\n          fontSize: '1rem'\n        },\n        children: \"Miscolored Rows Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: miscoloredRows.join(', ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7LjeA7tercesR25A9vFGzpTiD08=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Grid","dataList","jsxDEV","_jsxDEV","App","_s","today","setToday","Date","limit","setLimit","result","setResult","miscoloredRows","setMiscoloredRows","control","rows","document","querySelectorAll","miscoloredNames","forEach","row","index","_cells$","_cells$$textContent","_cells$2","_cells$2$textContent","_cells$3","_cells$3$textContent","_cells$4","_cells$4$textContent","_cells$5","_cells$5$textContent","cells","mailReceivedDate","textContent","trim","solutionSentDate","isNaN","getTime","dayDifference","Math","ceil","abs","computedStyle","window","getComputedStyle","isBackgroundRed","backgroundColor","rowName","push","count","handleCheck","children","fileName","_jsxFileName","lineNumber","columnNumber","source","style","marginTop","marginRight","type","onChange","e","target","value","toISOString","split","marginLeft","parseInt","onClick","length","fontWeight","display","fontSize","join","_c","$RefreshReg$"],"sources":["C:/Users/bozdo/React-Case-Study/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Grid from './grid';\r\nimport dataList from './data.json';\r\n\r\nexport default function App() {\r\n  const [today, setToday] = useState(new Date()); \r\n  const [limit, setLimit] = useState(5); \r\n  const [result, setResult] = useState(0); \r\n  const [miscoloredRows, setMiscoloredRows] = useState<string[]>([]);  \r\n\r\n  function control(today: Date, limit: number): { count: number, miscoloredNames: string[] } {\r\n  \r\n    const rows = document.querySelectorAll('tbody tr');  \r\n    let miscoloredRows = 0;\r\n    \r\n    const miscoloredNames: string[] = []; \r\n    rows.forEach((row, index) => { \r\n      const cells = row.querySelectorAll('td'); \r\n\r\n      const mailReceivedDate = new Date(cells[1]?.textContent?.trim() || '');\r\n      const solutionSentDate =\r\n        cells[2]?.textContent?.trim() && cells[2]?.textContent?.trim() !== '-'\r\n          ? new Date(cells[2]?.textContent?.trim())\r\n          : today;\r\n\r\n      if (isNaN(mailReceivedDate.getTime()) || isNaN(solutionSentDate.getTime())) {\r\n        return;\r\n      }\r\n\r\n      const dayDifference = Math.ceil(\r\n        Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      );\r\n\r\n      const computedStyle = window.getComputedStyle(row);\r\n      const isBackgroundRed = computedStyle.backgroundColor === 'rgb(255, 0, 0)';\r\n\r\n      const rowName = cells[0]?.textContent?.trim();\r\n\r\n      if ((isBackgroundRed && dayDifference <= limit) || (!isBackgroundRed && dayDifference > limit)) {\r\n        miscoloredRows++;\r\n        if (rowName) miscoloredNames.push(rowName);\r\n      }\r\n    });\r\n\r\n    return { count: miscoloredRows, miscoloredNames };\r\n  }\r\n\r\n  const handleCheck = () => {\r\n    const { count, miscoloredNames } = control(today, limit);\r\n    setResult(count);\r\n    setMiscoloredRows(miscoloredNames); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dgpays Case Study</h1>\r\n      <Grid source={dataList} />\r\n      <div style={{ marginTop: '20px' }}>\r\n        <label style={{ marginRight: '10px' }}>\r\n          Today : \r\n          <input\r\n            type=\"date\"\r\n            onChange={(e) => setToday(new Date(e.target.value))}\r\n            value={today.toISOString().split('T')[0]}\r\n            style={{ marginLeft: '5px' }} \r\n          />\r\n        </label>\r\n        <label style={{ marginRight: '40px' }}>\r\n          Limit :\r\n          <input\r\n            type=\"number\"\r\n            onChange={(e) => setLimit(parseInt(e.target.value))}\r\n            value={limit}\r\n          />\r\n        </label>\r\n        <button onClick={handleCheck}>Check Miscolored Rows</button>\r\n      </div>\r\n      <p>Miscolored Rows Count: {result}</p>\r\n      {miscoloredRows.length > 0 && (\r\n        <div>\r\n          <h3 style={{ fontWeight: 'normal', display: 'inline', fontSize: '1rem' }}>Miscolored Rows Name: </h3>\r\n          <span>{miscoloredRows.join(', ')}</span> \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}