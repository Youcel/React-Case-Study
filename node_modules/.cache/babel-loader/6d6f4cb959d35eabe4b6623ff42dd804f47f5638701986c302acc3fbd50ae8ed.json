{"ast":null,"code":"export function control(today, limit) {\n  const rows = document.querySelectorAll('tbody tr'); // Tablo satırlarını seçiyoruz\n  let miscoloredRows = 0;\n  rows.forEach((row, index) => {\n    var _cells$, _cells$$textContent, _cells$2, _cells$2$textContent, _cells$3, _cells$3$textContent, _cells$4, _cells$4$textContent;\n    const cells = row.querySelectorAll('td');\n\n    // Tarihleri al ve kontrol et\n    const mailReceivedDate = new Date(((_cells$ = cells[1]) === null || _cells$ === void 0 ? void 0 : (_cells$$textContent = _cells$.textContent) === null || _cells$$textContent === void 0 ? void 0 : _cells$$textContent.trim()) || '');\n    const solutionSentDate = (_cells$2 = cells[2]) !== null && _cells$2 !== void 0 && (_cells$2$textContent = _cells$2.textContent) !== null && _cells$2$textContent !== void 0 && _cells$2$textContent.trim() && ((_cells$3 = cells[2]) === null || _cells$3 === void 0 ? void 0 : (_cells$3$textContent = _cells$3.textContent) === null || _cells$3$textContent === void 0 ? void 0 : _cells$3$textContent.trim()) !== '-' ? new Date((_cells$4 = cells[2]) === null || _cells$4 === void 0 ? void 0 : (_cells$4$textContent = _cells$4.textContent) === null || _cells$4$textContent === void 0 ? void 0 : _cells$4$textContent.trim()) : today;\n    if (isNaN(mailReceivedDate.getTime()) || isNaN(solutionSentDate.getTime())) {\n      console.error(`Row ${index + 1}: Invalid date(s)`);\n      return;\n    }\n\n    // Gün farkını hesapla\n    const dayDifference = Math.ceil(Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24));\n\n    // Arka plan rengini kontrol et ve konsola yazdır\n    const computedStyle = window.getComputedStyle(row);\n    const isBackgroundRed = computedStyle.backgroundColor === 'rgb(255, 0, 0)';\n    console.log(`Row ${index + 1}: Background Color = ${computedStyle.backgroundColor}`);\n    console.log(`Row ${index + 1}: Is Background Red = ${isBackgroundRed}`);\n\n    // Koşulları kontrol et\n    if (isBackgroundRed && dayDifference > limit) {\n      console.log(`- Miscolored: No`);\n    } else if (!isBackgroundRed && dayDifference <= limit) {\n      console.log(`- Miscolored: No`);\n    } else {\n      console.log(`- Miscolored: Yes`);\n      miscoloredRows++;\n    }\n  });\n  console.log(`Total Miscolored Rows: ${miscoloredRows}`);\n  return miscoloredRows; // Hatalı satır sayısını döndür\n}","map":{"version":3,"names":["control","today","limit","rows","document","querySelectorAll","miscoloredRows","forEach","row","index","_cells$","_cells$$textContent","_cells$2","_cells$2$textContent","_cells$3","_cells$3$textContent","_cells$4","_cells$4$textContent","cells","mailReceivedDate","Date","textContent","trim","solutionSentDate","isNaN","getTime","console","error","dayDifference","Math","ceil","abs","computedStyle","window","getComputedStyle","isBackgroundRed","backgroundColor","log"],"sources":["C:/Users/bozdo/React-Case-Study/src/control.tsx"],"sourcesContent":["export function control(today: Date, limit: number): number {\r\n    const rows = document.querySelectorAll('tbody tr'); // Tablo satırlarını seçiyoruz\r\n    let miscoloredRows = 0;\r\n  \r\n    rows.forEach((row, index) => {\r\n      const cells = row.querySelectorAll('td');\r\n  \r\n      // Tarihleri al ve kontrol et\r\n      const mailReceivedDate = new Date(cells[1]?.textContent?.trim() || '');\r\n      const solutionSentDate =\r\n        cells[2]?.textContent?.trim() && cells[2]?.textContent?.trim() !== '-'\r\n          ? new Date(cells[2]?.textContent?.trim())\r\n          : today;\r\n  \r\n      if (isNaN(mailReceivedDate.getTime()) || isNaN(solutionSentDate.getTime())) {\r\n        console.error(`Row ${index + 1}: Invalid date(s)`);\r\n        return;\r\n      }\r\n  \r\n      // Gün farkını hesapla\r\n      const dayDifference = Math.ceil(\r\n        Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      );\r\n  \r\n      // Arka plan rengini kontrol et ve konsola yazdır\r\n      const computedStyle = window.getComputedStyle(row);\r\n      const isBackgroundRed = computedStyle.backgroundColor === 'rgb(255, 0, 0)';\r\n      \r\n      console.log(`Row ${index + 1}: Background Color = ${computedStyle.backgroundColor}`);\r\n      console.log(`Row ${index + 1}: Is Background Red = ${isBackgroundRed}`);\r\n  \r\n      // Koşulları kontrol et\r\n      if (isBackgroundRed && dayDifference > limit) {\r\n        console.log(`- Miscolored: No`);\r\n      } else if (!isBackgroundRed && dayDifference <= limit) {\r\n        console.log(`- Miscolored: No`);\r\n      } else {\r\n        console.log(`- Miscolored: Yes`);\r\n        miscoloredRows++;\r\n      }\r\n    });\r\n  \r\n    console.log(`Total Miscolored Rows: ${miscoloredRows}`);\r\n    return miscoloredRows; // Hatalı satır sayısını döndür\r\n  }\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}