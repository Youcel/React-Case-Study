{"ast":null,"code":"export function control(today, limit) {\n  const rows = document.querySelectorAll('tbody tr'); // Tablodaki tüm satırları seçiyoruz\n  let miscoloredRows = 0;\n  rows.forEach(row => {\n    var _cells$, _cells$2, _cells$3, _cells$4;\n    const cells = row.querySelectorAll('td');\n    const mailReceivedDate = new Date(((_cells$ = cells[1]) === null || _cells$ === void 0 ? void 0 : _cells$.textContent) || '');\n    const solutionSentDate = (_cells$2 = cells[2]) !== null && _cells$2 !== void 0 && _cells$2.textContent ? new Date(((_cells$3 = cells[2]) === null || _cells$3 === void 0 ? void 0 : _cells$3.textContent) || '') : today; // Eğer boşsa today kullanılıyor\n    const isBackgroundRed = ((_cells$4 = cells[3]) === null || _cells$4 === void 0 ? void 0 : _cells$4.textContent) === 'Yes';\n    const dayDifference = Math.ceil(Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24));\n    if (isBackgroundRed && dayDifference <= limit || !isBackgroundRed && dayDifference > limit) {\n      miscoloredRows++;\n    }\n  });\n  return miscoloredRows; // Hatalı renklendirilmiş satır sayısını döndür\n}","map":{"version":3,"names":["control","today","limit","rows","document","querySelectorAll","miscoloredRows","forEach","row","_cells$","_cells$2","_cells$3","_cells$4","cells","mailReceivedDate","Date","textContent","solutionSentDate","isBackgroundRed","dayDifference","Math","ceil","abs","getTime"],"sources":["C:/Users/bozdo/React-Case-Study/src/control.tsx"],"sourcesContent":["export function control(today: Date, limit: number): number {\r\n    const rows = document.querySelectorAll('tbody tr'); // Tablodaki tüm satırları seçiyoruz\r\n    let miscoloredRows = 0;\r\n  \r\n    rows.forEach((row) => {\r\n      const cells = row.querySelectorAll('td');\r\n      const mailReceivedDate = new Date(cells[1]?.textContent || '');\r\n      const solutionSentDate = cells[2]?.textContent\r\n        ? new Date(cells[2]?.textContent || '')\r\n        : today; // Eğer boşsa today kullanılıyor\r\n      const isBackgroundRed = cells[3]?.textContent === 'Yes';\r\n  \r\n      const dayDifference = Math.ceil(\r\n        Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      );\r\n  \r\n      if ((isBackgroundRed && dayDifference <= limit) || (!isBackgroundRed && dayDifference > limit)) {\r\n        miscoloredRows++;\r\n      }\r\n    });\r\n  \r\n    return miscoloredRows; // Hatalı renklendirilmiş satır sayısını döndür\r\n  }\r\n  "],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,KAAW,EAAEC,KAAa,EAAU;EACxD,MAAMC,IAAI,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;EACpD,IAAIC,cAAc,GAAG,CAAC;EAEtBH,IAAI,CAACI,OAAO,CAAEC,GAAG,IAAK;IAAA,IAAAC,OAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA;IACpB,MAAMC,KAAK,GAAGL,GAAG,CAACH,gBAAgB,CAAC,IAAI,CAAC;IACxC,MAAMS,gBAAgB,GAAG,IAAIC,IAAI,CAAC,EAAAN,OAAA,GAAAI,KAAK,CAAC,CAAC,CAAC,cAAAJ,OAAA,uBAARA,OAAA,CAAUO,WAAW,KAAI,EAAE,CAAC;IAC9D,MAAMC,gBAAgB,GAAG,CAAAP,QAAA,GAAAG,KAAK,CAAC,CAAC,CAAC,cAAAH,QAAA,eAARA,QAAA,CAAUM,WAAW,GAC1C,IAAID,IAAI,CAAC,EAAAJ,QAAA,GAAAE,KAAK,CAAC,CAAC,CAAC,cAAAF,QAAA,uBAARA,QAAA,CAAUK,WAAW,KAAI,EAAE,CAAC,GACrCf,KAAK,CAAC,CAAC;IACX,MAAMiB,eAAe,GAAG,EAAAN,QAAA,GAAAC,KAAK,CAAC,CAAC,CAAC,cAAAD,QAAA,uBAARA,QAAA,CAAUI,WAAW,MAAK,KAAK;IAEvD,MAAMG,aAAa,GAAGC,IAAI,CAACC,IAAI,CAC7BD,IAAI,CAACE,GAAG,CAACL,gBAAgB,CAACM,OAAO,CAAC,CAAC,GAAGT,gBAAgB,CAACS,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAC1F,CAAC;IAED,IAAKL,eAAe,IAAIC,aAAa,IAAIjB,KAAK,IAAM,CAACgB,eAAe,IAAIC,aAAa,GAAGjB,KAAM,EAAE;MAC9FI,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAOA,cAAc,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}