{"ast":null,"code":"export function control(today, limit) {\n  const rows = document.querySelectorAll('tbody tr'); // Tablodaki tüm satırları seçiyoruz\n  let miscoloredRows = 0;\n  rows.forEach(row => {\n    var _cells$, _cells$$textContent, _cells$2, _cells$2$textContent, _cells$3, _cells$3$textContent, _cells$4, _cells$4$textContent;\n    const cells = row.querySelectorAll('td');\n    if (cells.length < 4) return; // Hücre sayısını kontrol et (hataları önlemek için)\n\n    const mailReceivedDate = new Date(((_cells$ = cells[1]) === null || _cells$ === void 0 ? void 0 : (_cells$$textContent = _cells$.textContent) === null || _cells$$textContent === void 0 ? void 0 : _cells$$textContent.trim()) || ''); // Gönderim tarihi\n    const solutionSentDate = (_cells$2 = cells[2]) !== null && _cells$2 !== void 0 && (_cells$2$textContent = _cells$2.textContent) !== null && _cells$2$textContent !== void 0 && _cells$2$textContent.trim() ? new Date((_cells$3 = cells[2]) === null || _cells$3 === void 0 ? void 0 : (_cells$3$textContent = _cells$3.textContent) === null || _cells$3$textContent === void 0 ? void 0 : _cells$3$textContent.trim()) : today; // Teslim tarihi yoksa today kullanılıyor\n    const isBackgroundRed = ((_cells$4 = cells[3]) === null || _cells$4 === void 0 ? void 0 : (_cells$4$textContent = _cells$4.textContent) === null || _cells$4$textContent === void 0 ? void 0 : _cells$4$textContent.trim()) === 'Yes'; // Kırmızı arka plan\n\n    // Tarih farkını hesapla\n    const dayDifference = Math.ceil(Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24));\n\n    // Yanlış renklendirme kontrolü\n    if (isBackgroundRed && dayDifference <= limit || !isBackgroundRed && dayDifference > limit) {\n      miscoloredRows++;\n    }\n  });\n  return miscoloredRows; // Hatalı renklendirilmiş satır sayısını döndür\n}","map":{"version":3,"names":["control","today","limit","rows","document","querySelectorAll","miscoloredRows","forEach","row","_cells$","_cells$$textContent","_cells$2","_cells$2$textContent","_cells$3","_cells$3$textContent","_cells$4","_cells$4$textContent","cells","length","mailReceivedDate","Date","textContent","trim","solutionSentDate","isBackgroundRed","dayDifference","Math","ceil","abs","getTime"],"sources":["C:/Users/bozdo/React-Case-Study/src/control.tsx"],"sourcesContent":["export function control(today: Date, limit: number): number {\r\n    const rows = document.querySelectorAll('tbody tr'); // Tablodaki tüm satırları seçiyoruz\r\n    let miscoloredRows = 0;\r\n  \r\n    rows.forEach((row) => {\r\n      const cells = row.querySelectorAll('td');\r\n  \r\n      if (cells.length < 4) return; // Hücre sayısını kontrol et (hataları önlemek için)\r\n  \r\n      const mailReceivedDate = new Date(cells[1]?.textContent?.trim() || ''); // Gönderim tarihi\r\n      const solutionSentDate = cells[2]?.textContent?.trim()\r\n        ? new Date(cells[2]?.textContent?.trim())\r\n        : today; // Teslim tarihi yoksa today kullanılıyor\r\n      const isBackgroundRed = cells[3]?.textContent?.trim() === 'Yes'; // Kırmızı arka plan\r\n  \r\n      // Tarih farkını hesapla\r\n      const dayDifference = Math.ceil(\r\n        Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      );\r\n  \r\n      // Yanlış renklendirme kontrolü\r\n      if ((isBackgroundRed && dayDifference <= limit) || (!isBackgroundRed && dayDifference > limit)) {\r\n        miscoloredRows++;\r\n      }\r\n    });\r\n  \r\n    return miscoloredRows; // Hatalı renklendirilmiş satır sayısını döndür\r\n  }\r\n  "],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,KAAW,EAAEC,KAAa,EAAU;EACxD,MAAMC,IAAI,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;EACpD,IAAIC,cAAc,GAAG,CAAC;EAEtBH,IAAI,CAACI,OAAO,CAAEC,GAAG,IAAK;IAAA,IAAAC,OAAA,EAAAC,mBAAA,EAAAC,QAAA,EAAAC,oBAAA,EAAAC,QAAA,EAAAC,oBAAA,EAAAC,QAAA,EAAAC,oBAAA;IACpB,MAAMC,KAAK,GAAGT,GAAG,CAACH,gBAAgB,CAAC,IAAI,CAAC;IAExC,IAAIY,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC;;IAE9B,MAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAAC,EAAAX,OAAA,GAAAQ,KAAK,CAAC,CAAC,CAAC,cAAAR,OAAA,wBAAAC,mBAAA,GAARD,OAAA,CAAUY,WAAW,cAAAX,mBAAA,uBAArBA,mBAAA,CAAuBY,IAAI,CAAC,CAAC,KAAI,EAAE,CAAC,CAAC,CAAC;IACxE,MAAMC,gBAAgB,GAAG,CAAAZ,QAAA,GAAAM,KAAK,CAAC,CAAC,CAAC,cAAAN,QAAA,gBAAAC,oBAAA,GAARD,QAAA,CAAUU,WAAW,cAAAT,oBAAA,eAArBA,oBAAA,CAAuBU,IAAI,CAAC,CAAC,GAClD,IAAIF,IAAI,EAAAP,QAAA,GAACI,KAAK,CAAC,CAAC,CAAC,cAAAJ,QAAA,wBAAAC,oBAAA,GAARD,QAAA,CAAUQ,WAAW,cAAAP,oBAAA,uBAArBA,oBAAA,CAAuBQ,IAAI,CAAC,CAAC,CAAC,GACvCrB,KAAK,CAAC,CAAC;IACX,MAAMuB,eAAe,GAAG,EAAAT,QAAA,GAAAE,KAAK,CAAC,CAAC,CAAC,cAAAF,QAAA,wBAAAC,oBAAA,GAARD,QAAA,CAAUM,WAAW,cAAAL,oBAAA,uBAArBA,oBAAA,CAAuBM,IAAI,CAAC,CAAC,MAAK,KAAK,CAAC,CAAC;;IAEjE;IACA,MAAMG,aAAa,GAAGC,IAAI,CAACC,IAAI,CAC7BD,IAAI,CAACE,GAAG,CAACL,gBAAgB,CAACM,OAAO,CAAC,CAAC,GAAGV,gBAAgB,CAACU,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAC1F,CAAC;;IAED;IACA,IAAKL,eAAe,IAAIC,aAAa,IAAIvB,KAAK,IAAM,CAACsB,eAAe,IAAIC,aAAa,GAAGvB,KAAM,EAAE;MAC9FI,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAOA,cAAc,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}