{"ast":null,"code":"export function control(today, limit, updatedData, setUpdatedData) {\n  const rows = document.querySelectorAll('tbody tr');\n  let miscoloredRows = 0;\n  const newData = [...updatedData];\n  rows.forEach((row, index) => {\n    var _cells$, _cells$$textContent, _cells$2, _cells$2$textContent, _cells$3, _cells$3$textContent, _cells$4, _cells$4$textContent;\n    const cells = row.querySelectorAll('td');\n    const mailReceivedDate = new Date(((_cells$ = cells[1]) === null || _cells$ === void 0 ? void 0 : (_cells$$textContent = _cells$.textContent) === null || _cells$$textContent === void 0 ? void 0 : _cells$$textContent.trim()) || '');\n    const solutionSentDate = (_cells$2 = cells[2]) !== null && _cells$2 !== void 0 && (_cells$2$textContent = _cells$2.textContent) !== null && _cells$2$textContent !== void 0 && _cells$2$textContent.trim() && ((_cells$3 = cells[2]) === null || _cells$3 === void 0 ? void 0 : (_cells$3$textContent = _cells$3.textContent) === null || _cells$3$textContent === void 0 ? void 0 : _cells$3$textContent.trim()) !== '-' ? new Date((_cells$4 = cells[2]) === null || _cells$4 === void 0 ? void 0 : (_cells$4$textContent = _cells$4.textContent) === null || _cells$4$textContent === void 0 ? void 0 : _cells$4$textContent.trim()) : today;\n    if (isNaN(mailReceivedDate.getTime()) || isNaN(solutionSentDate.getTime())) {\n      return;\n    }\n    const dayDifference = Math.ceil(Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24));\n    const isBackgroundRed = dayDifference > limit;\n    newData[index].isBackgroundColorRed = isBackgroundRed;\n    if (isBackgroundRed && dayDifference <= limit) {\n      miscoloredRows++;\n    } else if (!isBackgroundRed && dayDifference > limit) {\n      miscoloredRows++;\n    }\n  });\n  setUpdatedData(newData);\n  return miscoloredRows;\n}","map":{"version":3,"names":["control","today","limit","updatedData","setUpdatedData","rows","document","querySelectorAll","miscoloredRows","newData","forEach","row","index","_cells$","_cells$$textContent","_cells$2","_cells$2$textContent","_cells$3","_cells$3$textContent","_cells$4","_cells$4$textContent","cells","mailReceivedDate","Date","textContent","trim","solutionSentDate","isNaN","getTime","dayDifference","Math","ceil","abs","isBackgroundRed","isBackgroundColorRed"],"sources":["C:/Users/bozdo/React-Case-Study/src/control.tsx"],"sourcesContent":["export function control(\r\n    today: Date,\r\n    limit: number,\r\n    updatedData: Array<any>,\r\n    setUpdatedData: React.Dispatch<React.SetStateAction<any[]>>\r\n  ): number {\r\n    const rows = document.querySelectorAll('tbody tr');\r\n    let miscoloredRows = 0;\r\n  \r\n    const newData = [...updatedData];\r\n  \r\n    rows.forEach((row, index) => {\r\n      const cells = row.querySelectorAll('td');\r\n  \r\n      const mailReceivedDate = new Date(cells[1]?.textContent?.trim() || '');\r\n      const solutionSentDate =\r\n        cells[2]?.textContent?.trim() && cells[2]?.textContent?.trim() !== '-'\r\n          ? new Date(cells[2]?.textContent?.trim())\r\n          : today;\r\n  \r\n      if (isNaN(mailReceivedDate.getTime()) || isNaN(solutionSentDate.getTime())) {\r\n        return;\r\n      }\r\n  \r\n      const dayDifference = Math.ceil(\r\n        Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) /\r\n          (1000 * 60 * 60 * 24)\r\n      );\r\n  \r\n      const isBackgroundRed = dayDifference > limit;\r\n  \r\n      newData[index].isBackgroundColorRed = isBackgroundRed;\r\n  \r\n      if (isBackgroundRed && dayDifference <= limit) {\r\n        miscoloredRows++;\r\n      } else if (!isBackgroundRed && dayDifference > limit) {\r\n        miscoloredRows++;\r\n      }\r\n    });\r\n  \r\n    setUpdatedData(newData);\r\n    return miscoloredRows;\r\n  }\r\n  "],"mappings":"AAAA,OAAO,SAASA,OAAOA,CACnBC,KAAW,EACXC,KAAa,EACbC,WAAuB,EACvBC,cAA2D,EACnD;EACR,MAAMC,IAAI,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,UAAU,CAAC;EAClD,IAAIC,cAAc,GAAG,CAAC;EAEtB,MAAMC,OAAO,GAAG,CAAC,GAAGN,WAAW,CAAC;EAEhCE,IAAI,CAACK,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IAAA,IAAAC,OAAA,EAAAC,mBAAA,EAAAC,QAAA,EAAAC,oBAAA,EAAAC,QAAA,EAAAC,oBAAA,EAAAC,QAAA,EAAAC,oBAAA;IAC3B,MAAMC,KAAK,GAAGV,GAAG,CAACJ,gBAAgB,CAAC,IAAI,CAAC;IAExC,MAAMe,gBAAgB,GAAG,IAAIC,IAAI,CAAC,EAAAV,OAAA,GAAAQ,KAAK,CAAC,CAAC,CAAC,cAAAR,OAAA,wBAAAC,mBAAA,GAARD,OAAA,CAAUW,WAAW,cAAAV,mBAAA,uBAArBA,mBAAA,CAAuBW,IAAI,CAAC,CAAC,KAAI,EAAE,CAAC;IACtE,MAAMC,gBAAgB,GACpB,CAAAX,QAAA,GAAAM,KAAK,CAAC,CAAC,CAAC,cAAAN,QAAA,gBAAAC,oBAAA,GAARD,QAAA,CAAUS,WAAW,cAAAR,oBAAA,eAArBA,oBAAA,CAAuBS,IAAI,CAAC,CAAC,IAAI,EAAAR,QAAA,GAAAI,KAAK,CAAC,CAAC,CAAC,cAAAJ,QAAA,wBAAAC,oBAAA,GAARD,QAAA,CAAUO,WAAW,cAAAN,oBAAA,uBAArBA,oBAAA,CAAuBO,IAAI,CAAC,CAAC,MAAK,GAAG,GAClE,IAAIF,IAAI,EAAAJ,QAAA,GAACE,KAAK,CAAC,CAAC,CAAC,cAAAF,QAAA,wBAAAC,oBAAA,GAARD,QAAA,CAAUK,WAAW,cAAAJ,oBAAA,uBAArBA,oBAAA,CAAuBK,IAAI,CAAC,CAAC,CAAC,GACvCxB,KAAK;IAEX,IAAI0B,KAAK,CAACL,gBAAgB,CAACM,OAAO,CAAC,CAAC,CAAC,IAAID,KAAK,CAACD,gBAAgB,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;MAC1E;IACF;IAEA,MAAMC,aAAa,GAAGC,IAAI,CAACC,IAAI,CAC7BD,IAAI,CAACE,GAAG,CAACN,gBAAgB,CAACE,OAAO,CAAC,CAAC,GAAGN,gBAAgB,CAACM,OAAO,CAAC,CAAC,CAAC,IAC9D,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CACxB,CAAC;IAED,MAAMK,eAAe,GAAGJ,aAAa,GAAG3B,KAAK;IAE7CO,OAAO,CAACG,KAAK,CAAC,CAACsB,oBAAoB,GAAGD,eAAe;IAErD,IAAIA,eAAe,IAAIJ,aAAa,IAAI3B,KAAK,EAAE;MAC7CM,cAAc,EAAE;IAClB,CAAC,MAAM,IAAI,CAACyB,eAAe,IAAIJ,aAAa,GAAG3B,KAAK,EAAE;MACpDM,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEFJ,cAAc,CAACK,OAAO,CAAC;EACvB,OAAOD,cAAc;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}