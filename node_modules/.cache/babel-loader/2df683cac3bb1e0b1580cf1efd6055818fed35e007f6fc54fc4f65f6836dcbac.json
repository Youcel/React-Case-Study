{"ast":null,"code":"export function control(today, limit) {\n  const rows = document.querySelectorAll('tbody tr'); // Tablo satırlarını seçiyoruz\n  let miscoloredRows = 0;\n  rows.forEach((row, index) => {\n    var _cells$, _cells$$textContent, _cells$2, _cells$2$textContent, _cells$3, _cells$3$textContent, _cells$4, _cells$4$textContent;\n    const cells = row.querySelectorAll('td');\n\n    // Tarih değerlerini al\n    const mailReceivedDate = new Date(((_cells$ = cells[1]) === null || _cells$ === void 0 ? void 0 : (_cells$$textContent = _cells$.textContent) === null || _cells$$textContent === void 0 ? void 0 : _cells$$textContent.trim()) || '');\n    const solutionSentDate = (_cells$2 = cells[2]) !== null && _cells$2 !== void 0 && (_cells$2$textContent = _cells$2.textContent) !== null && _cells$2$textContent !== void 0 && _cells$2$textContent.trim() && ((_cells$3 = cells[2]) === null || _cells$3 === void 0 ? void 0 : (_cells$3$textContent = _cells$3.textContent) === null || _cells$3$textContent === void 0 ? void 0 : _cells$3$textContent.trim()) !== '-' ? new Date((_cells$4 = cells[2]) === null || _cells$4 === void 0 ? void 0 : (_cells$4$textContent = _cells$4.textContent) === null || _cells$4$textContent === void 0 ? void 0 : _cells$4$textContent.trim()) : today;\n\n    // Tarihlerin geçerli olup olmadığını kontrol et\n    if (isNaN(mailReceivedDate.getTime())) {\n      console.error(`Row ${index + 1}: Invalid Mail Received Date`);\n      return;\n    }\n    if (isNaN(solutionSentDate.getTime())) {\n      console.error(`Row ${index + 1}: Invalid Solution Sent Date`);\n      return;\n    }\n\n    // Arka plan rengini kontrol et\n    const computedStyle = window.getComputedStyle(row);\n    const isBackgroundRed = computedStyle.backgroundColor === 'rgb(255, 0, 0)';\n\n    // Gün farkını hesapla\n    const dayDifference = Math.ceil(Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24));\n\n    // Debug bilgilerini yazdır\n    console.log(`Row ${index + 1}:`);\n    console.log(`- Mail Received Date: ${mailReceivedDate}`);\n    console.log(`- Solution Sent Date: ${solutionSentDate}`);\n    console.log(`- Day Difference: ${dayDifference}`);\n    console.log(`- Is Background Red: ${isBackgroundRed}`);\n\n    // Yanlış renklendirme kontrolü\n    if (isBackgroundRed && dayDifference <= limit ||\n    // Kırmızı ama limitten küçükse\n    !isBackgroundRed && dayDifference > limit // Kırmızı değil ama limitten büyükse\n    ) {\n      console.log(`- Miscolored: Yes`);\n      miscoloredRows++;\n    } else {\n      console.log(`- Miscolored: No`);\n    }\n  });\n  console.log(`Total Miscolored Rows: ${miscoloredRows}`);\n  return miscoloredRows; // Hatalı satır sayısını döndür\n}","map":{"version":3,"names":["control","today","limit","rows","document","querySelectorAll","miscoloredRows","forEach","row","index","_cells$","_cells$$textContent","_cells$2","_cells$2$textContent","_cells$3","_cells$3$textContent","_cells$4","_cells$4$textContent","cells","mailReceivedDate","Date","textContent","trim","solutionSentDate","isNaN","getTime","console","error","computedStyle","window","getComputedStyle","isBackgroundRed","backgroundColor","dayDifference","Math","ceil","abs","log"],"sources":["C:/Users/bozdo/React-Case-Study/src/control.tsx"],"sourcesContent":["export function control(today: Date, limit: number): number {\r\n    const rows = document.querySelectorAll('tbody tr'); // Tablo satırlarını seçiyoruz\r\n    let miscoloredRows = 0;\r\n  \r\n    rows.forEach((row, index) => {\r\n      const cells = row.querySelectorAll('td');\r\n  \r\n      // Tarih değerlerini al\r\n      const mailReceivedDate = new Date(cells[1]?.textContent?.trim() || '');\r\n      const solutionSentDate =\r\n        cells[2]?.textContent?.trim() && cells[2]?.textContent?.trim() !== '-'\r\n          ? new Date(cells[2]?.textContent?.trim())\r\n          : today;\r\n  \r\n      // Tarihlerin geçerli olup olmadığını kontrol et\r\n      if (isNaN(mailReceivedDate.getTime())) {\r\n        console.error(`Row ${index + 1}: Invalid Mail Received Date`);\r\n        return;\r\n      }\r\n      if (isNaN(solutionSentDate.getTime())) {\r\n        console.error(`Row ${index + 1}: Invalid Solution Sent Date`);\r\n        return;\r\n      }\r\n  \r\n      // Arka plan rengini kontrol et\r\n      const computedStyle = window.getComputedStyle(row);\r\n      const isBackgroundRed = computedStyle.backgroundColor === 'rgb(255, 0, 0)';\r\n  \r\n      // Gün farkını hesapla\r\n      const dayDifference = Math.ceil(\r\n        Math.abs(solutionSentDate.getTime() - mailReceivedDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      );\r\n  \r\n      // Debug bilgilerini yazdır\r\n      console.log(`Row ${index + 1}:`);\r\n      console.log(`- Mail Received Date: ${mailReceivedDate}`);\r\n      console.log(`- Solution Sent Date: ${solutionSentDate}`);\r\n      console.log(`- Day Difference: ${dayDifference}`);\r\n      console.log(`- Is Background Red: ${isBackgroundRed}`);\r\n  \r\n      // Yanlış renklendirme kontrolü\r\n      if (\r\n        (isBackgroundRed && dayDifference <= limit) || // Kırmızı ama limitten küçükse\r\n        (!isBackgroundRed && dayDifference > limit)   // Kırmızı değil ama limitten büyükse\r\n      ) {\r\n        console.log(`- Miscolored: Yes`);\r\n        miscoloredRows++;\r\n      } else {\r\n        console.log(`- Miscolored: No`);\r\n      }\r\n    });\r\n  \r\n    console.log(`Total Miscolored Rows: ${miscoloredRows}`);\r\n    return miscoloredRows; // Hatalı satır sayısını döndür\r\n  }\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}